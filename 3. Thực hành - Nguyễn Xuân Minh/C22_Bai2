	.data
		int_a: .word 0
		int_b: .word 1
		int_c: .word 2
		str_output: .asciiz "a = "
	.text
	.globl main
# macro
	.macro cinInteger
	li $v0, 5
	syscall
	.end_macro
	
	.macro printString (%str)
	li $v0, 4
	la $a0, %str
	syscall
	.end_macro
	
	.macro printInteger (%integer)
	addi $v0, $zero, 1
	move $a0, %integer
	syscall
	.end_macro
	
main:
# Nhap a:
	cinInteger
	sw $v0, int_a
	
# Process:
	lw $t1, int_a
	lw $t5, int_b
	lw $t6, int_c

# a < -3
	addi $t2, $zero, -3
	slt $t3, $1, $t2
	xori $t3, $t3, 1 	# a >= -3

# 4 < a
	addi $t2, $zero, 4
	slt $t4, $t2, $t1
	xori $t4, $t4, 1	# a <= 4
	
# a >= -3 && a <= 4
	and $t0, $t3, $t4
	
	beq $t0, $zero, else
	sub $t1, $t5, $t6
	j end_if
else:
	add $t1, $t5, $t6
end_if:
	sw $t1, int_a
	
	printString(str_output)
	printInteger($t1)
	
	# terminate
	li $v0, 10
	syscall