	.data
		int_arr: .word 24, 68, 57, 91, 13, 46, 35, 79, 80, 2
		int_n: .word 10
		int_max: .word 0
		int_min: .word 0
		int_range: .word 0
		
		str_max: .asciiz "Max = "
		str_min: .asciiz "Min = "
		str_range: .asciiz "Range = "
		str_enter: .asciiz "\n"
		
	.text
	.globl main

# macro:
	.macro printInteger (%integer)
		addi $v0, $zero, 1
		move $a0, %integer
		syscall
	.end_macro
	
	.macro printString (%str)
		addi $v0, $zero, 4
		la $a0, %str
		syscall
	.end_macro
	
	.macro cinInteger (%int)
		li $v0, 5
		syscall 
		sw $v0, %int
	.end_macro
	
	.macro cinCharacter (%ch)
		li $v0, 12
		syscall 
		sb $v0, %ch
	.end_macro
	

main:
# Nhap:
	
# xu ly:
	la $a0, int_arr
	lw $a1, int_n
	
	jal range
	
# Xuat:
	
# Ket thuc:
	li $v0, 10
	syscall
	
	
#------------------------------- information function range----------------------------------
# Ten ham: range: tinh max - min
# input: $a0 = address of arr
#	$a1 = so phan tu

# output: $v0 = range
#-----------------------------------------------------------------------------
range:
	addi $sp, $sp, -4
	sw $ra, 0($sp)
#----------------------------------------------------
	# block 1:
	la $a0, int_arr
	lw $a1, int_n
	
	jal max_function
	sw $v0, int_max
	lw $t0, int_max
	printString(str_max)
	printInteger($t0)
	
	printString(str_enter)
	
	# block 2:
	la $a0, int_arr
	lw $a1, int_n
	
	jal min_function
	sw $v0, int_min
	lw $t1, int_min
	printString(str_min)
	printInteger($t1)
	
	printString(str_enter)
	
   # calculate: range = max - min
   	sub $t0, $t0, $t1
   	sw $t0, int_range
   	lw $t0, int_range
   	printString(str_range)
   	printInteger($t0)

#----------------------------------------------------
	lw $ra, 0($sp)
	addi $sp, $sp, 4
	
	jr $ra

	
#------------------------------- information function max_function----------------------------------
# Ten ham: max: tinh max
# input: $a2 = address of arr
#	$s0 = max
#`	$s1 = arr[i]
#	$s2 = i
#	$s3 = max - a[i]

# output: $v0 = range
#-----------------------------------------------------------------------------	
max_function:
	add $a2, $a0, $zero
	#---------------------------------
	lw $s0, 0($a2)
	addi $s2, $zero, 1
	addi $a2, $a2, 4
	loop1:	
		beq $s2, $a1, end_loop1
		lw $s1, 0($a2)
		sub $s3, $s0, $s1
		#----------------------
			bgtz $s3, end_if1
			move $s0, $s1
		end_if1: 
			addi $s2, $s2, 1
			addi $a2, $a2, 4
		#-----------------------
		j loop1
	end_loop1:
		move $v0, $s0
	#---------------------------------
	 jr $ra 


#------------------------------- information function min_function----------------------------------
# Ten ham: max: tinh min
# input: $a2 = address of arr
#	$s0 = min
#`	$s1 = arr[i]
#	$s2 = i
#	$s3 = min - a[i]

# output: $v0 = range
#-----------------------------------------------------------------------------	
min_function:
	add $a2, $a0, $zero
	#---------------------------------
	lw $s0, 0($a2)
	addi $s2, $zero, 1
	addi $a2, $a2, 4
	loop2:	
		beq $s2, $a1, end_loop2
		lw $s1, 0($a2)
		sub $s3, $s0, $s1
		#----------------------
			bltz $s3, end_if2
			move $s0, $s1
		end_if2: 
			addi $s2, $s2, 1
			addi $a2, $a2, 4
		#-----------------------
		j loop2
	end_loop2:
		move $v0, $s0
	#---------------------------------
	 jr $ra 